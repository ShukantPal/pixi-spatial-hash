/*!
 * pixi-spatial-hash - v1.0.0
 * Compiled Sun, 12 Jul 2020 15:56:52 UTC
 *
 * pixi-spatial-hash is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
window.PIXI=window.PIXI||{};var __pixi_spatial_hash=function(t,e,s,h){"use strict";const i=new e.Rectangle;class a{constructor(t=256){this.cellSize=t,this.buckets=new Map,this.reset()}put(t,e=t.getBounds()){return this.hashBounds(e,e=>{let s=this.buckets.get(e);s||(s=new Set,this.buckets.set(e,s)),s.add(t)}),this}remove(t){this.buckets.forEach(e=>{e.delete(t)})}update(t,e=t.getBounds()){this.remove(t),this.put(t,e)}search(t){const e=new Set;return this.hashBounds(t,s=>{const h=this.buckets.get(s);h&&h.forEach(s=>{const h=s.getBounds(!1,i);h.right>=t.left&&h.left<=t.right&&h.bottom>=t.top&&h.top<=t.bottom&&e.add(s)})}),e}reset(){this.buckets.forEach((t,e)=>{this.buckets.set(e,new Set)})}hashPoint(t,e){return`${Math.floor(t/this.cellSize)}|${Math.floor(e/this.cellSize)}`}hashBounds(t,e){const{cellSize:s}=this,h=1/s,i=Math.floor(t.left*h)*s,a=Math.floor(t.top*h)*s,r=Math.floor(t.right*h)*s;for(let o=Math.floor(t.bottom*h)*s;o>=a;o-=s)for(let t=r;t>=i;t-=s)e(this.hashPoint(t,o))}}const r=new e.Rectangle;class o extends h.System{constructor(t){super(t),this.update=()=>{const t=this.hashTargets;this.hash2D.reset(),t.forEach(t=>{this.skipBoundsUpdate||t.getBounds(!1,r),this.updateRecursive(t)})},this.hash2D=new a(o.SCENE_CELL_SIZE),this.hashTargets=new Set,this.updateBeforeRender=!0,this.updateTicker=null,this.skipBoundsUpdate=!1}addTarget(t){return this.hashTargets.add(t),this}removeTarget(t){return this.hashTargets.delete(t),this}search(t){const e=t;return(t instanceof s.DisplayObject||t.getBounds)&&(t=t.getBounds()),this.hash2D.search(e)}prerender(){this.updateBeforeRender&&this.update()}setTicker(t){return this.updateTicker&&this.updateTicker.remove(this.update),this.updateTicker=t,this.updateTicker&&(this.updateBeforeRender=!1,this.updateTicker.add(this.update)),this}updateRecursive(t){this.hash2D.put(t,t.getBounds(!0,r));const e=t.children;if(e&&e.length)for(let t=0,s=e.length;t<s;t++)this.updateRecursive(e[t])}}return o.SCENE_CELL_SIZE=256,t.SpatialHash=a,t.SpatialHashSystem=o,t}({},PIXI,PIXI,PIXI);Object.assign(window.PIXI,__pixi_spatial_hash);
//# sourceMappingURL=pixi-spatial-hash.js.map
